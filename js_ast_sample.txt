Original Obfuscated Code: exports.init=function(c){return function(b,a,d){c.enabled("x-powered-by")&&a.setHeader("X-Powered-By","Express");b.res=a;a.req=b;b.next=d;b.__proto__=c.request;a.__proto__=c.response;a.locals=a.locals||Object.create(null);d()}};

{
    "type": "Program",
    "body": [
        {
            "type": "ExpressionStatement",
            "expression": {
                "type": "AssignmentExpression",
                "operator": "=",
                "left": {
                    "type": "MemberExpression",
                    "computed": false,
                    "object": {
                        "type": "Identifier",
                        "name": "exports"
                    },
                    "property": {
                        "type": "Identifier",
                        "name": "init"
                    }
                },
                "right": {
                    "type": "FunctionExpression",
                    "id": null,
                    "params": [
                        {
                            "type": "Identifier",
                            "name": "c"
                        }
                    ],
                    "defaults": [],
                    "body": {
                        "type": "BlockStatement",
                        "body": [
                            {
                                "type": "ReturnStatement",
                                "argument": {
                                    "type": "FunctionExpression",
                                    "id": null,
                                    "params": [
                                        {
                                            "type": "Identifier",
                                            "name": "b"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "a"
                                        },
                                        {
                                            "type": "Identifier",
                                            "name": "d"
                                        }
                                    ],
                                    "defaults": [],
                                    "body": {
                                        "type": "BlockStatement",
                                        "body": [
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "LogicalExpression",
                                                    "operator": "&&",
                                                    "left": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "c"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "enabled"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "x-powered-by",
                                                                "raw": "\"x-powered-by\""
                                                            }
                                                        ]
                                                    },
                                                    "right": {
                                                        "type": "CallExpression",
                                                        "callee": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "a"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "setHeader"
                                                            }
                                                        },
                                                        "arguments": [
                                                            {
                                                                "type": "Literal",
                                                                "value": "X-Powered-By",
                                                                "raw": "\"X-Powered-By\""
                                                            },
                                                            {
                                                                "type": "Literal",
                                                                "value": "Express",
                                                                "raw": "\"Express\""
                                                            }
                                                        ]
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "res"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "a"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "req"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "b"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "next"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "b"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "__proto__"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "c"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "request"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "__proto__"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "c"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "response"
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "AssignmentExpression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "MemberExpression",
                                                        "computed": false,
                                                        "object": {
                                                            "type": "Identifier",
                                                            "name": "a"
                                                        },
                                                        "property": {
                                                            "type": "Identifier",
                                                            "name": "locals"
                                                        }
                                                    },
                                                    "right": {
                                                        "type": "LogicalExpression",
                                                        "operator": "||",
                                                        "left": {
                                                            "type": "MemberExpression",
                                                            "computed": false,
                                                            "object": {
                                                                "type": "Identifier",
                                                                "name": "a"
                                                            },
                                                            "property": {
                                                                "type": "Identifier",
                                                                "name": "locals"
                                                            }
                                                        },
                                                        "right": {
                                                            "type": "CallExpression",
                                                            "callee": {
                                                                "type": "MemberExpression",
                                                                "computed": false,
                                                                "object": {
                                                                    "type": "Identifier",
                                                                    "name": "Object"
                                                                },
                                                                "property": {
                                                                    "type": "Identifier",
                                                                    "name": "create"
                                                                }
                                                            },
                                                            "arguments": [
                                                                {
                                                                    "type": "Literal",
                                                                    "value": null,
                                                                    "raw": "null"
                                                                }
                                                            ]
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "ExpressionStatement",
                                                "expression": {
                                                    "type": "CallExpression",
                                                    "callee": {
                                                        "type": "Identifier",
                                                        "name": "d"
                                                    },
                                                    "arguments": []
                                                }
                                            }
                                        ]
                                    },
                                    "generator": false,
                                    "expression": false
                                }
                            }
                        ]
                    },
                    "generator": false,
                    "expression": false
                }
            }
        }
    ],
    "sourceType": "script"
}
